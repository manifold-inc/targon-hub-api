apiVersion: v1
kind: Namespace
metadata:
  name: traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-account
  namespace: traefik
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
  - kind: ServiceAccount
    name: traefik-account
    namespace: traefik
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-deployment
  namespace: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-account
      containers:
        - name: traefik
          image: traefik:latest
          args:
            - --api.insecure
            - --providers.kubernetesingress
          ports:
            - name: web
              containerPort: 80
              hostPort: 80
            - name: dashboard
              containerPort: 8080
              hostPort: 8080
      nodeSelector:
        ingress-ready: "true"
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Equal"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service
  namespace: traefik
spec:
  # We use NodePort instead of LoadBalancer to be able to access externally when using kind
  # see https://kind.sigs.k8s.io/docs/user/ingress
  type: NodePort
  ports:
    - port: 8080
      targetPort: dashboard
  selector:
    app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-service
  namespace: traefik
spec:
  type: NodePort
  ports:
    - targetPort: web
      port: 80
  selector:
    app: traefik
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: targon-hub-api
  namespace: default
  labels:
    app: targon-hub-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: targon-hub-api
  template:
    metadata:
      labels:
        app: targon-hub-api
    spec:
      containers:
        - name: targon-hub-api
          image: manifoldlabs/targon-hub-api:temp
          ports:
            - name: web
              containerPort: 80
          env:
            - name: HOTKEY
              value: ""
            - name: PUBLIC_KEY
              value: ""
            - name: PRIVATE_KEY
              value: ""
            - name: PROXY_URL
              value: ""
            - name: DSN
              value: ""
            - name: REDIS_HOST
              value: ""
            - name: REDIS_PORT
              value: ""
            - name: INFLUX_TOKEN
              value: ""
            - name: INFLUX_ENDPOINT
              value: ""
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vram-estimator
  namespace: default
  labels:
    app: vram-estimator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vram-estimator
  template:
    metadata:
      labels:
        app: vram-estimator
    spec:
      containers:
        - name: vram-estimator
          image: manifoldlabs/targon-hub-vram-estimator:temp
          ports:
            - name: web
              containerPort: 80
          env:
            - name: HOTKEY
              value: ""
            - name: PUBLIC_KEY
              value: ""
            - name: PRIVATE_KEY
              value: ""
            - name: PROXY_URL
              value: ""
            - name: DSN
              value: ""
            - name: REDIS_HOST
              value: ""
            - name: REDIS_PORT
              value: ""
            - name: INFLUX_TOKEN
              value: ""
            - name: INFLUX_ENDPOINT
              value: ""
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis-cache
  namespace: default
  labels:
    app: redis-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cache
  template:
    metadata:
      labels:
        app: redis-cache
    spec:
      containers:
        - name: redis-cache
          image: redis/redis-stack-server:latest
          ports:
            - name: web
              containerPort: 6379
          env:
            - name: HOTKEY
              value: ""
            - name: PUBLIC_KEY
              value: ""
            - name: PRIVATE_KEY
              value: ""
            - name: PROXY_URL
              value: ""
            - name: DSN
              value: ""
            - name: REDIS_HOST
              value: ""
            - name: REDIS_PORT
              value: ""
            - name: INFLUX_TOKEN
              value: ""
            - name: INFLUX_ENDPOINT
              value: ""
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: miner-cache
  namespace: default
  labels:
    app: miner-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: miner-cache
  template:
    metadata:
      labels:
        app: miner-cache
    spec:
      containers:
        - name: miner-cache
          image: manifoldlabs/targon-hub-miner-cache:temp
          env:
            - name: HOTKEY
              value: ""
            - name: PUBLIC_KEY
              value: ""
            - name: PRIVATE_KEY
              value: ""
            - name: PROXY_URL
              value: ""
            - name: DSN
              value: ""
            - name: REDIS_HOST
              value: ""
            - name: REDIS_PORT
              value: ""
            - name: INFLUX_TOKEN
              value: ""
            - name: INFLUX_ENDPOINT
              value: ""
---
apiVersion: v1
kind: Service
metadata:
  name: targon-hub-api
  namespace: default
spec:
  ports:
    - name: web
      port: 80
      targetPort: 80
  selector:
    app: targon-hub-api
---
apiVersion: v1
kind: Service
metadata:
  name: vram-estimator
  namespace: default
spec:
  ports:
    - name: web
      port: 80
      targetPort: 80
  selector:
    app: vram-estimator
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cache
  namespace: default
spec:
  ports:
    - name: web
      port: 6379
      targetPort: 6379
  selector:
    app: redis-cache
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: targon-hub-api-ingress
  namespace: default
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: targon-hub-api
                port:
                  number: 80
    - host: temp.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vram-estimator
                port:
                  number: 80
