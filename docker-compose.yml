services:
  vram-estimator:
    env_file: .env
    image: manifoldlabs/targon-hub-vram-estimator:${VERSION:-latest}
    labels:
      - traefik.enable=true
      - traefik.http.routers.vram.rule=Host(`estimate.${PROXY_URL}`)
      - traefik.http.routers.vram.tls=true
      - traefik.http.routers.vram.tls.certresolver=letsencrypt
      - traefik.http.services.vram.loadbalancer.server.port=80
    build:
      context: ./vram-estimator
      platforms: 
      - linux/amd64
  api:
    image: manifoldlabs/targon-hub-api:${VERSION:-latest}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${PROXY_URL}`)
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.services.api.loadbalancer.server.port=80
      - vector.enable
    env_file: .env
    build:
      context: ./api
      platforms: 
      - linux/amd64
    restart: always
    depends_on:
      cache:
        condition: service_healthy

  miner-cache:
    image: manifoldlabs/targon-hub-miner-cache:${VERSION:-latest}
    env_file: .env
    build:
      context: ./miner-cache
      platforms: 
      - linux/amd64
    restart: always
    depends_on:
      cache:
        condition: service_healthy

  cache:
    image: redis/redis-stack-server:latest
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: "3s"
    volumes: 
      - cache:/data

  traefik:
    image: traefik:v2.3
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - traefik-public-certificates:/certificates
  vector:
    image: timberio/vector:0.43.0-debian
    environment:
      - INFLUX_ENDPOINT=${INFLUX_ENDPOINT}
      - INFLUX_TOKEN=${INFLUX_TOKEN}
      - LOKI_ENDPOINT=${LOKI_ENDPOINT}
      - LOKI_USERNAME=${LOKI_USERNAME}
      - LOKI_PASSWORD=${LOKI_PASSWORD}
    volumes:
      - ./vector.toml:/etc/vector/vector.toml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: --config /etc/vector/vector.toml
    restart: unless-stopped

volumes:
  traefik-public-certificates:
  cache:
    driver: local
